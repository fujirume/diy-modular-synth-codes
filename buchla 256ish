#include "LedControl.h"
#include <MD_REncoder.h>
MD_REncoder R = MD_REncoder(7, 6);
MD_REncoder R2 = MD_REncoder(3, 4);
MD_REncoder R3 = MD_REncoder(9, 8);
#include <Wire.h>
#include <Adafruit_MCP4725.h>
int i= 0;
int j=0;
int k;
int p;
int kpot=0;
int kpot2=3;
int kpot3=0;
int primo=0;
int ultimo=4000;
int env=0;
int primo2=0;
int ultimo2 = 4000;


Adafruit_MCP4725 dac;

LedControl lc=LedControl(12,11,10,1);

void setup() {
  
dac.begin(0x60);
R.begin();
R2.begin();
R3.begin();
lc.shutdown(0,false);
lc.setIntensity(0,8);
lc.clearDisplay(0);
Serial.begin(9600);
lc.setLed(0,3,0,true);
lc.setLed(0,0,3,true);

}

void loop() {
  int env=analogRead(A0);

uint8_t x = R.read(); 

if(x==16){
 pointerp();
  }

if(x==32){
  pointerm();
  }



uint8_t x2 = R2.read(); 

if(x2==16){
 pointerp2();
  }

if(x2==32){
  pointerm2();
  }



  
uint8_t x3 = R3.read(); 

if(x3==16){
 pointerp3();
  }

if(x3==32){
  pointerm3();
  }


switch(kpot3){



case 0:        
              switch(kpot){
                case 0: primo=0;break;
                case 1: primo=1000;break;
                case 2: primo=2000;break;
                case 3: primo =4000;break;
                }
              
              switch(kpot2){
                case 0: ultimo=0;break;
                case 1: ultimo=1000;break;
                case 2: ultimo=2000;break;
                case 3: ultimo=4000;break;
                }
               i = map(env,0,1024,primo,ultimo);break;

case 1:   if (env<700){ i = map(env,0,1024,primo2,1000);}
          else        { i = map(env,0,1024,1000,ultimo2); }break;
               
case 2:   if (env<700){ i = map(env,0,1024,primo2,2000);}
          else        { i = map(env,0,1024,2000,ultimo2); }   break;     

case 3:   if (env<700){ i = map(env,0,1024,primo2,3000);}
          else        { i = map(env,0,1024,3000,ultimo2); }   break;        
               
case 4:   if (env<700){ i = map(env,0,1024,primo2,3200);}
          else        { i = map(env,0,1024,3200,ultimo2); }   break;      


case 5:   if (env<300){ i = map(env,0,1024,primo2,3200);}
          else        { i = map(env,0,1024,3200,ultimo2); }   break;      

case 6:   if (env<300){ i = map(env,0,1024,primo2,3000);}
          else        { i = map(env,0,1024,3000,ultimo2); }   break; 

case 7:   if (env<300){ i = map(env,0,1024,primo2,2000);}
          else        { i = map(env,0,1024,2000,ultimo2); }   break; 

case 8:   if (env<300){ i = map(env,0,1024,primo2,1000);}
          else        { i = map(env,0,1024,1000,ultimo2); }   break; 


               }

dac.setVoltage(i,false);

  }

void pointerp(){
kpot = kpot+1;
if(kpot==4){kpot=0;}
  switch(kpot){
    case 0:lc.setLed(0,3,0,true);lc.setLed(0,0,0,false);primo2=0;break;
    case 1:lc.setLed(0,2,0,true);lc.setLed(0,3,0,false);primo2=1000;break;
    case 2:lc.setLed(0,1,0,true);lc.setLed(0,2,0,false);primo2=2000;break;
    case 3:lc.setLed(0,0,0,true);lc.setLed(0,1,0,false);primo2=4000;break;
    
    }
  
  
  
  }


void pointerm(){
kpot = kpot-1;
if(kpot==-1){kpot=3;}
   switch(kpot){
    case 0:lc.setLed(0,3,0,true);lc.setLed(0,2,0,false);primo2=0;break;
    case 1:lc.setLed(0,2,0,true);lc.setLed(0,1,0,false);primo2=1000;break;
    case 2:lc.setLed(0,1,0,true);lc.setLed(0,0,0,false);primo2=2000;break;
    case 3:lc.setLed(0,0,0,true);lc.setLed(0,3,0,false);primo2=4000;break;
    }
  
  
  
  }



void pointerp2(){
kpot2 = kpot2+1;
if(kpot2==4){kpot2=0;}
  switch(kpot2){
    case 0:lc.setLed(0,3,3,true);lc.setLed(0,0,3,false);ultimo2=0;break;
    case 1:lc.setLed(0,2,3,true);lc.setLed(0,3,3,false);ultimo2=1000;break;
    case 2:lc.setLed(0,1,3,true);lc.setLed(0,2,3,false);ultimo2=2000;break;
    case 3:lc.setLed(0,0,3,true);lc.setLed(0,1,3,false);ultimo2=4000;break;
    
    }
  
  
  
  }



void pointerm2(){
kpot2 = kpot2-1;
if(kpot2==-1){kpot2=3;}
   switch(kpot2){
    case 0:lc.setLed(0,3,3,true);lc.setLed(0,2,3,false);ultimo2=0;break;
    case 1:lc.setLed(0,2,3,true);lc.setLed(0,1,3,false);ultimo2=1000;break;
    case 2:lc.setLed(0,1,3,true);lc.setLed(0,0,3,false);ultimo2=2000;break;
    case 3:lc.setLed(0,0,3,true);lc.setLed(0,3,3,false);ultimo2=4000;break;
    }
  
  
  
  }


void pointerp3(){
kpot3 = kpot3+1;
if(kpot3==9){kpot3=0;}


switch (kpot3){
  case 1 : lc.setLed(0,3,2,true);lc.setLed(0,3,1,false);break;
  case 2 : lc.setLed(0,2,2,true);lc.setLed(0,3,2,false);break;
  case 3 : lc.setLed(0,1,2,true);lc.setLed(0,2,2,false);break;
  case 4 : lc.setLed(0,0,2,true);lc.setLed(0,1,2,false);break;
  case 5 : lc.setLed(0,0,1,true);lc.setLed(0,0,2,false);break;
  case 6 : lc.setLed(0,1,1,true);lc.setLed(0,0,1,false);break;
  case 7 : lc.setLed(0,2,1,true);lc.setLed(0,1,1,false);break;
  case 8 : lc.setLed(0,3,1,true);lc.setLed(0,2,1,false);break;
  case 0 : lc.setLed(0,3,1,false);break;

  }
  
  
  }







void pointerm3(){
  
kpot3 = kpot3-1;
if(kpot3==-1){kpot3=8;}


switch (kpot3){
  case 1 : lc.setLed(0,3,2,true);lc.setLed(0,2,2,false);break;
  case 2 : lc.setLed(0,2,2,true);lc.setLed(0,1,2,false);break;
  case 3 : lc.setLed(0,1,2,true);lc.setLed(0,0,2,false);break;
  case 4 : lc.setLed(0,0,2,true);lc.setLed(0,0,1,false);break;
  case 5 : lc.setLed(0,0,1,true);lc.setLed(0,1,1,false);break;
  case 6 : lc.setLed(0,1,1,true);lc.setLed(0,2,1,false);break;
  case 7 : lc.setLed(0,2,1,true);lc.setLed(0,3,1,false);break;
  case 8 : lc.setLed(0,3,1,true);lc.setLed(0,3,2,false);break;
  case 0 : lc.setLed(0,3,2,false);break;


  }
  

  }

